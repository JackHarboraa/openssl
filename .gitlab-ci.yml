
debian_stretch:
  image: debian:stretch
  script:
    - apt-get update
    - apt-get -qy install --no-install-recommends build-essential
    - ./config
    - make
    - make test

mingw-w64:
  image: debian:stretch-slim
  script:
    - export CROSS_COMPILE=x86_64-w64-mingw32-
    - export CONFIG_OPTS="no-stdio"
    - export EXE_SHELL=wine
    - export WINEPREFIX=`pwd`
    - dpkg --add-architecture i386
    - apt-get update
    - apt-get -qy install --no-install-recommends
          binutils-mingw-w64
          build-essential
          gcc-mingw-w64
          wine
    - ./Configure mingw64 $CONFIG_OPTS -Wno-pedantic-ms-format;
    - make
    - make test

doc-nits:
  image: debian:stretch-slim
  script:
    - apt-get update
    - apt-get -qy install --no-install-recommends make perl
    - ./config
    - make doc-nits

make-update:
  image: debian:stretch-slim
  script:
    - apt-get update
    - apt-get -qy install --no-install-recommends build-essential git
    - ./config
    - make update
    - git diff --exit-code

.android-template: &android-template
  image: registry.gitlab.com/fdroid/ci-images-client
  artifacts:
    name: "${CI_PROJECT_PATH}_${CI_JOB_STAGE}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHA}"
    paths:
      - "*.so*"
      - "*.a"
    when:
      always
    expire_in: 1 week
  before_script:
    - apt-get update
    - apt-get install ca-certificates curl libtinfo5 make unzip
  script:
    - ndk=android-ndk-`echo $CI_JOB_NAME | awk '{print $2}'`
    - ndkzip=${ndk}-linux-x86_64.zip
    - curl --silent http://dl.google.com/android/repository/${ndkzip} > $ndkzip
    - unzip -q $ndkzip
    - export ANDROID_NDK_HOME=`pwd`/$ndk
    - export PATH=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH

    - export ABI=`echo $CI_JOB_NAME | awk '{print $5}'`
    - test $ABI = "armeabi-v7a"
        && { alt_triplet=arm-linux-androideabi; arch=arm; path_triplet=$alt_triplet; }
    - test $ABI = "arm64-v8a"
        && { alt_triplet=$host_triplet; arch=arm64; path_triplet=$host_triplet; }
    - test $ABI = "x86"
        && { alt_triplet=$host_triplet; arch=$ABI; path_triplet=$ABI; }
    - test $ABI = "x86_64"
        && { alt_triplet=$host_triplet; arch=$ABI; path_triplet=$ABI; }
    - platform=21
    - export CC=${host_triplet}${platform}-clang
    - if ! which $CC; then
        export CC="${alt_triplet}-gcc --sysroot=$ANDROID_NDK_HOME/platforms/android-$platform/arch-$arch -isystem $ANDROID_NDK_HOME/sysroot/usr/include/$alt_triplet -isystem $ANDROID_NDK_HOME/sysroot/usr/include";
        export CFLAGS=-D__ANDROID_API__=$platform
        export PATH=$ANDROID_NDK_HOME/toolchains/${alt_triplet}-4.9/prebuilt/linux-x86_64/bin:$PATH;
      fi

    - ./Configure no-shared android-$arch -D__ANDROID_API__=$platform
    - make

android r17b 22 default armeabi-v7a:
  <<: *android-template

android r20b 22 default armeabi-v7a:
  <<: *android-template

android r21 22 default arm64-v8a:
  <<: *android-template

android r21 22 default x86_64:
  <<: *android-template
