# SF copied the initial version of this from https://gist.github.com/zroger/5990997
#
# Minimal httpd.conf for running apache in the foreground for local php
# development.
#
# Setup:
# 1. Place this file in the root of your project.
# 2. Make sure the apache directory exists (for the pid and lock files).
# 3. Update the DocumentRoot and Directory directives with the relative path to
#    your project's document root.
#
# Usage:
# httpd -d . -f httpd.conf -DFOREGROUND
#
# Relative file paths in this file are relative to the server root, which is
# assumed to be set from the command line option, as in the about usage.
#
#

# Generally - we'll point to build tree - you may need to change this
# if you built elsewhere
Define ATOP "${HOME}/code/httpd"
Define OTOP "${HOME}/code/openssl"
Define OE   ${OTOP}/esnistuff
Define ARUN ${OE}/apache

ServerName example.com
Listen 9443

PidFile ${ARUN}/httpd.pid


#
# Optional Modules
#

# maybe built in now - configure seems to include it, we'll see...
# Provides allow, deny and order directives.
LoadModule authz_core_module ${ATOP}/modules/aaa/.libs/mod_authz_core.so
LoadModule authz_host_module ${ATOP}/modules/aaa/.libs/mod_authz_host.so

# Provides DirectoryIndex directive.
#LoadModule dir_module ${ATOP}/modules/mappers/.libs/mod_dir.so

# Provides SetEnv directive.
LoadModule env_module ${ATOP}/modules/metadata/.libs/mod_env.so

# Provides automatic mime content type headers.
LoadModule mime_module ${ATOP}/modules/http/.libs/mod_mime.so

# Provides CustomLog and LogFormat directives.
LoadModule log_config_module ${ATOP}/modules/loggers/.libs/mod_log_config.so

# Allow rewrite rules in .htaccess files.
LoadModule rewrite_module ${ATOP}/modules/mappers/.libs/mod_rewrite.so

# something to do with system permissions, no idea really;-)
LoadModule unixd_module ${ATOP}/modules/arch/unix/.libs/mod_unixd.so

# the meat... 
LoadModule ssl_module ${ATOP}/modules/ssl/.libs/mod_ssl.so

# Using homebrew php53.  Change as necessary.
# Later...
# LoadModule php5_module /usr/local/opt/php53/libexec/apache2/libphp5.so

#
# Logs are piped to `cat` which prints to STDOUT.
#
LogLevel info
#LogLevel debug
LogFormat "%h %l %u %t \"%r\" %>s \"%{Referer}i\" \"%{User-Agent}i\"" combined
LogFormat "%h %l %u %t \"%r\" %>s %b" common
ErrorLog ${ARUN}/logs/error.log
CustomLog ${ARUN}/logs/access.log combined

# mime types here
TypesConfig /etc/mime.types

# Our TLS stuff - fake wildcard cert should work all over
SSLEngine On
SSLProtocol TLSv1.3
SSLESNIKeyDir ${OE}/esnikeydir
SSLCertificateFile ${OE}/cadir/example.com.crt
SSLCertificateKeyFile ${OE}/cadir/example.com.priv

# Our pretend virtual hosts
<VirtualHost *:9443>
SSLEngine On
SSLProtocol TLSv1.3
ServerName example.com
DocumentRoot "${ARUN}/www"
</VirtualHost>
<VirtualHost *:9443>
SSLEngine On
SSLProtocol TLSv1.3
ServerName baz.example.com
DocumentRoot "${ARUN}/baz"
</VirtualHost>

#
# Basic PHP handling.
#
#AddType application/x-httpd-php .php
#DirectoryIndex index.html index.php

#
# Provide applications with a hook to detect when running locally.
#
#SetEnv LOCAL_SERVER true

